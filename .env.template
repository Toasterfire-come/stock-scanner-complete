# ===== DJANGO CORE SETTINGS =====
# SECURITY WARNING: Generate a new secret key for production!
# Use: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
DJANGO_SECRET_KEY=your-super-secret-production-key-change-this-immediately

# Environment (development, staging, production)
DJANGO_ENVIRONMENT=production

# Debug mode (NEVER set to True in production)
DEBUG=False

# Allowed hosts (comma-separated list)
ALLOWED_HOSTS=yourdomain.com,www.yourdomain.com,api.yourdomain.com,127.0.0.1,localhost

# ===== DATABASE CONFIGURATION =====
# Production Database
DB_ENGINE=django.db.backends.mysql
DB_NAME=stockscanner_production
DB_USER=django_user
DB_PASSWORD=your-secure-database-password-change-this
DB_HOST=localhost
DB_PORT=3306

# WordPress Database (for integration)
WP_DB_NAME=wordpress_stockscanner
WP_DB_USER=wp_user
WP_DB_PASSWORD=your-secure-wp-password-change-this
WP_DB_HOST=localhost
WP_DB_PORT=3306

# ===== WORDPRESS INTEGRATION =====
# WordPress site URL
WORDPRESS_URL=https://yourdomain.com
WORDPRESS_API_URL=https://yourdomain.com/wp-json/wp/v2

# Django API URL for WordPress to connect to
DJANGO_API_URL=https://api.yourdomain.com

# API Authentication
DJANGO_API_KEY=your-django-api-key-for-wordpress-integration
WORDPRESS_API_KEY=your-wordpress-api-key-if-needed

# WordPress admin credentials (for automated setup)
WP_ADMIN_USER=admin
WP_ADMIN_PASSWORD=secure-wp-admin-password
WP_ADMIN_EMAIL=admin@yourdomain.com

# ===== SEO & ANALYTICS =====
# Google Analytics
GOOGLE_ANALYTICS_ID=GA-XXXXXXXXX-X
GOOGLE_TAG_MANAGER_ID=GTM-XXXXXXX

# Google Search Console
GOOGLE_SITE_VERIFICATION=your-google-site-verification-code

# Bing Webmaster Tools
BING_SITE_VERIFICATION=your-bing-verification-code

# Social Media Integration
FACEBOOK_APP_ID=your-facebook-app-id
TWITTER_SITE=@yourtwitterhandle
LINKEDIN_COMPANY_ID=your-linkedin-company-id

# Schema.org Organization Data
ORGANIZATION_NAME=Your Company Name
ORGANIZATION_DESCRIPTION=Professional stock market analysis and trading tools platform
ORGANIZATION_LOGO_URL=https://yourdomain.com/images/logo.png
ORGANIZATION_ADDRESS=Your Business Address
ORGANIZATION_PHONE=+1-XXX-XXX-XXXX
ORGANIZATION_EMAIL=contact@yourdomain.com

# ===== EMAIL CONFIGURATION =====
# SMTP Settings for notifications
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=noreply@yourdomain.com
EMAIL_HOST_PASSWORD=your-email-app-password
DEFAULT_FROM_EMAIL=Stock Scanner <noreply@yourdomain.com>

# Admin email for notifications
ADMIN_EMAIL=admin@yourdomain.com
SUPPORT_EMAIL=support@yourdomain.com

# ===== EXTERNAL API KEYS =====
# Yahoo Finance (if API key needed in future)
YAHOO_FINANCE_API_KEY=your-yahoo-finance-api-key-if-needed

# News API (for additional news sources)
NEWS_API_KEY=your-news-api-key-if-needed

# Alpha Vantage (alternative stock data)
ALPHA_VANTAGE_API_KEY=your-alpha-vantage-api-key-if-needed

# ===== CACHING & PERFORMANCE =====
# Redis Configuration (optional but recommended)
REDIS_URL=redis://127.0.0.1:6379/1
CACHE_BACKEND=django.core.cache.backends.redis.RedisCache

# CDN Configuration (optional)
CDN_URL=https://cdn.yourdomain.com
STATIC_CDN_URL=https://static.yourdomain.com

# ===== SECURITY SETTINGS =====
# SSL/HTTPS Configuration
SECURE_SSL_REDIRECT=True
SECURE_PROXY_SSL_HEADER=HTTP_X_FORWARDED_PROTO,https
SESSION_COOKIE_SECURE=True
CSRF_COOKIE_SECURE=True
SECURE_BROWSER_XSS_FILTER=True
SECURE_CONTENT_TYPE_NOSNIFF=True

# CORS Settings for WordPress integration
CORS_ALLOWED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com
CORS_ALLOW_CREDENTIALS=True

# ===== LOGGING & MONITORING =====
# Log levels (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log file paths
DJANGO_LOG_FILE=/var/log/stockscanner/django.log
ERROR_LOG_FILE=/var/log/stockscanner/error.log
ACCESS_LOG_FILE=/var/log/stockscanner/access.log

# Sentry Error Tracking (optional)
SENTRY_DSN=your-sentry-dsn-url-if-using-sentry

# ===== BACKUP & STORAGE =====
# Backup Configuration
BACKUP_DIR=/backups/stockscanner
BACKUP_RETENTION_DAYS=30

# AWS S3 (if using for file storage)
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_STORAGE_BUCKET_NAME=your-s3-bucket-name
AWS_S3_REGION_NAME=us-east-1

# ===== STOCK DATA CONFIGURATION =====
# Data update intervals (in minutes)
STOCK_UPDATE_INTERVAL=10
NEWS_UPDATE_INTERVAL=30
CLEANUP_INTERVAL=1440

# Data retention (in days)
STOCK_DATA_RETENTION_DAYS=365
NEWS_DATA_RETENTION_DAYS=90
LOG_RETENTION_DAYS=30

# Rate limiting
API_RATE_LIMIT_ANON=1000/day
API_RATE_LIMIT_USER=10000/day

# ===== MEMBERSHIP & PAYMENTS =====
# Membership Tiers and Pricing
# Free: $0/month - 50 API calls, 10 searches, 25 news articles
# Basic: $15/month - 1000 API calls, 200 searches, 500 news articles  
# Premium: $49/month - 5000 API calls, 1000 searches, 2500 news articles
# Professional: $149/month - 20000 API calls, 5000 searches, 10000 news articles

# Stripe Configuration (if using for payments)
STRIPE_PUBLISHABLE_KEY=pk_live_your-stripe-publishable-key
STRIPE_SECRET_KEY=sk_live_your-stripe-secret-key
STRIPE_WEBHOOK_SECRET=whsec_your-stripe-webhook-secret

# PayPal Configuration (alternative payment processor)
PAYPAL_CLIENT_ID=your-paypal-client-id
PAYPAL_CLIENT_SECRET=your-paypal-client-secret
PAYPAL_MODE=live

# ===== SOCIAL AUTHENTICATION =====
# Google OAuth (for social login)
GOOGLE_OAUTH2_CLIENT_ID=your-google-oauth-client-id
GOOGLE_OAUTH2_CLIENT_SECRET=your-google-oauth-client-secret

# Facebook OAuth
FACEBOOK_APP_ID=your-facebook-app-id
FACEBOOK_APP_SECRET=your-facebook-app-secret

# ===== NOTIFICATION SERVICES =====
# Slack Integration (for admin notifications and emergency alerts)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/slack/webhook

# Discord Integration (for admin notifications and emergency alerts)
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/your/discord/webhook

# Telegram Bot (for alerts)
TELEGRAM_BOT_TOKEN=your-telegram-bot-token
TELEGRAM_CHAT_ID=your-telegram-chat-id

# Emergency Alert Thresholds
# System will progressively block users based on resource usage:
# Warning: 60% CPU, 70% Memory, 80% Disk, 1000 API requests/min
# Critical: 80% CPU, 85% Memory, 90% Disk, 2000 API requests/min  
# Emergency: 95% CPU, 95% Memory, 98% Disk, 3000 API requests/min (Only Professional users allowed)

# ===== DEVELOPMENT/TESTING =====
# Test Database (for running tests)
TEST_DB_NAME=test_stockscanner
TEST_DB_USER=test_user
TEST_DB_PASSWORD=test_password

# Debug Toolbar (development only)
SHOW_DEBUG_TOOLBAR=False

# ===== CUSTOM FEATURES =====
# AI/ML Features
ENABLE_AI_SENTIMENT_ANALYSIS=True
ENABLE_ADVANCED_ANALYTICS=True
ENABLE_PREDICTIVE_MODELS=False

# Feature Flags
ENABLE_REAL_TIME_UPDATES=True
ENABLE_MOBILE_APP_API=True
ENABLE_WEBHOOK_NOTIFICATIONS=True
ENABLE_ADVANCED_CHARTING=True

# ===== DOMAIN & SSL =====
# Primary domain
PRIMARY_DOMAIN=yourdomain.com
API_SUBDOMAIN=api.yourdomain.com
CDN_SUBDOMAIN=cdn.yourdomain.com

# SSL Certificate paths (for manual SSL setup)
SSL_CERT_PATH=/etc/letsencrypt/live/yourdomain.com/fullchain.pem
SSL_KEY_PATH=/etc/letsencrypt/live/yourdomain.com/privkey.pem

# ===== TIMEZONE & LOCALIZATION =====
# Timezone
TIME_ZONE=UTC
USE_TZ=True

# Language and localization
LANGUAGE_CODE=en-us
USE_I18N=True
USE_L10N=True

# Market timezone (for stock data)
MARKET_TIMEZONE=America/New_York

# ===== PERFORMANCE TUNING =====
# Database connection pooling
DB_CONN_MAX_AGE=300
DB_CONN_HEALTH_CHECKS=True

# Gunicorn workers (for production)
GUNICORN_WORKERS=3
GUNICORN_TIMEOUT=120
GUNICORN_KEEPALIVE=5

# ===== MAINTENANCE MODE =====
# Maintenance mode settings
MAINTENANCE_MODE=False
MAINTENANCE_MESSAGE=Site temporarily unavailable for maintenance
MAINTENANCE_ALLOWED_IPS=127.0.0.1,your.admin.ip.address

# ===== API DOCUMENTATION =====
# Swagger/OpenAPI settings
ENABLE_API_DOCS=True
API_DOCS_URL=/api/docs/
API_TITLE=Stock Scanner API
API_VERSION=v1
API_DESCRIPTION=Professional stock market data and analysis API

# ===== NOTES =====
# 1. Replace all placeholder values with your actual configuration
# 2. Generate strong passwords and API keys
# 3. Never commit this file with real credentials to version control
# 4. Use different values for development, staging, and production
# 5. Regularly rotate passwords and API keys
# 6. Enable 2FA where possible
# 7. Monitor logs for suspicious activity
# 8. Keep backups of your configuration
# 9. Test all integrations before going live
# 10. Document any custom configurations
