# Generated by Django 4.2.11 on 2025-08-07 20:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('stocks', '0002_discount_revenue_tracking'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserWatchlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Watchlist name', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Watchlist description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_return_percent', models.DecimalField(decimal_places=4, default=0, help_text='Average return since addition', max_digits=8)),
                ('best_performer', models.CharField(blank=True, help_text='Best performing stock ticker', max_length=10)),
                ('worst_performer', models.CharField(blank=True, help_text='Worst performing stock ticker', max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watchlists', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, help_text='Public username for social features', max_length=50, null=True, unique=True)),
                ('bio', models.TextField(blank=True, help_text='User biography', max_length=500)),
                ('avatar_url', models.URLField(blank=True, help_text='Profile picture URL')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPortfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Portfolio name', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Portfolio description')),
                ('is_public', models.BooleanField(default=False, help_text='Whether portfolio is publicly viewable')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_value', models.DecimalField(decimal_places=2, default=0, help_text='Current total portfolio value', max_digits=20)),
                ('total_cost', models.DecimalField(decimal_places=2, default=0, help_text='Total cost basis', max_digits=20)),
                ('total_return', models.DecimalField(decimal_places=2, default=0, help_text='Total return amount', max_digits=20)),
                ('total_return_percent', models.DecimalField(decimal_places=4, default=0, help_text='Total return percentage', max_digits=8)),
                ('followers_count', models.PositiveIntegerField(default=0, help_text='Number of followers')),
                ('likes_count', models.PositiveIntegerField(default=0, help_text='Number of likes')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolios', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserInterests',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('followed_stocks', models.JSONField(default=list, help_text='List of stock tickers user follows')),
                ('followed_sectors', models.JSONField(default=list, help_text='List of sectors user follows')),
                ('preferred_categories', models.JSONField(default=list, help_text='Preferred news categories')),
                ('news_frequency', models.CharField(choices=[('realtime', 'Real-time'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly')], default='daily', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='interests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TradeTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell')], max_length=10)),
                ('shares', models.DecimalField(decimal_places=4, help_text='Number of shares', max_digits=15)),
                ('price', models.DecimalField(decimal_places=4, help_text='Price per share', max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total transaction amount', max_digits=20)),
                ('fees', models.DecimalField(decimal_places=2, default=0, help_text='Transaction fees', max_digits=10)),
                ('transaction_date', models.DateTimeField(help_text='When the transaction occurred')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('alert_category', models.CharField(choices=[('earnings', 'Earnings Alert'), ('analyst', 'Analyst Rating'), ('insider', 'Insider Trading'), ('merger', 'Merger/Acquisition'), ('volume', 'Volume Surge'), ('price', 'Price Alert'), ('manual', 'Manual Trade')], default='manual', max_length=20)),
                ('realized_gain_loss', models.DecimalField(blank=True, decimal_places=2, help_text='Realized gain/loss for sell transactions', max_digits=20, null=True)),
                ('holding_period_days', models.PositiveIntegerField(blank=True, help_text='Days held for sell transactions', null=True)),
                ('from_alert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='stocks.stockalert')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='stocks.userportfolio')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stocks.stock')),
            ],
            options={
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.CreateModel(
            name='PortfolioHolding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shares', models.DecimalField(decimal_places=4, help_text='Number of shares held', max_digits=15)),
                ('average_cost', models.DecimalField(decimal_places=4, help_text='Average cost per share', max_digits=12)),
                ('current_price', models.DecimalField(decimal_places=4, help_text='Current price per share', max_digits=12)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('alert_action_date', models.DateTimeField(blank=True, help_text='When alert action was taken', null=True)),
                ('market_value', models.DecimalField(decimal_places=2, default=0, help_text='Current market value', max_digits=20)),
                ('unrealized_gain_loss', models.DecimalField(decimal_places=2, default=0, help_text='Unrealized gain/loss', max_digits=20)),
                ('unrealized_gain_loss_percent', models.DecimalField(decimal_places=4, default=0, help_text='Unrealized gain/loss percentage', max_digits=8)),
                ('from_alert', models.ForeignKey(blank=True, help_text='Alert that triggered this position', null=True, on_delete=django.db.models.deletion.SET_NULL, to='stocks.stockalert')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='holdings', to='stocks.userportfolio')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stocks.stock')),
            ],
            options={
                'ordering': ['-date_added'],
            },
        ),
        migrations.CreateModel(
            name='PortfolioFollowing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('followed_at', models.DateTimeField(auto_now_add=True)),
                ('followed_portfolio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stocks.userportfolio')),
                ('followed_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to=settings.AUTH_USER_MODEL)),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalizedNews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='News article title', max_length=500)),
                ('content', models.TextField(help_text='News article content/summary')),
                ('url', models.URLField(help_text='Original article URL')),
                ('source', models.CharField(help_text='News source', max_length=100)),
                ('relevance_score', models.DecimalField(decimal_places=2, help_text='Relevance score 0-100', max_digits=5)),
                ('related_stocks', models.JSONField(default=list, help_text='List of related stock tickers')),
                ('category', models.CharField(choices=[('earnings', 'Earnings'), ('analyst', 'Analyst Rating'), ('insider', 'Insider Trading'), ('merger', 'Merger/Acquisition'), ('ipo', 'IPO'), ('dividend', 'Dividend'), ('guidance', 'Guidance'), ('partnership', 'Partnership'), ('regulation', 'Regulation'), ('general', 'General News')], default='general', max_length=20)),
                ('published_at', models.DateTimeField(help_text='When article was published')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, help_text='When user read the article', null=True)),
                ('clicked', models.BooleanField(default=False, help_text='Whether user clicked the article')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personalized_news', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-published_at'],
            },
        ),
        migrations.CreateModel(
            name='WatchlistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('added_price', models.DecimalField(decimal_places=4, help_text='Price when added to watchlist', max_digits=12)),
                ('current_price', models.DecimalField(decimal_places=4, help_text='Current stock price', max_digits=12)),
                ('price_change', models.DecimalField(decimal_places=4, default=0, help_text='Price change since addition', max_digits=12)),
                ('price_change_percent', models.DecimalField(decimal_places=4, default=0, help_text='Price change percentage', max_digits=8)),
                ('notes', models.TextField(blank=True, help_text='User notes about this stock')),
                ('target_price', models.DecimalField(blank=True, decimal_places=4, help_text='Target price', max_digits=12, null=True)),
                ('stop_loss', models.DecimalField(blank=True, decimal_places=4, help_text='Stop loss price', max_digits=12, null=True)),
                ('price_alert_enabled', models.BooleanField(default=False, help_text='Enable price alerts')),
                ('news_alert_enabled', models.BooleanField(default=False, help_text='Enable news alerts')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stocks.stock')),
                ('watchlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='stocks.userwatchlist')),
            ],
            options={
                'ordering': ['-added_at'],
                'indexes': [models.Index(fields=['watchlist', 'stock'], name='stocks_watc_watchli_bf557f_idx'), models.Index(fields=['price_change_percent'], name='stocks_watc_price_c_6f2f15_idx'), models.Index(fields=['target_price'], name='stocks_watc_target__40e338_idx')],
                'unique_together': {('watchlist', 'stock')},
            },
        ),
        migrations.AddIndex(
            model_name='userwatchlist',
            index=models.Index(fields=['user', 'created_at'], name='stocks_user_user_id_53cb6b_idx'),
        ),
        migrations.AddIndex(
            model_name='userwatchlist',
            index=models.Index(fields=['total_return_percent'], name='stocks_user_total_r_4e0547_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['username'], name='stocks_user_usernam_dbfc18_idx'),
        ),
        migrations.AddIndex(
            model_name='userportfolio',
            index=models.Index(fields=['user', 'created_at'], name='stocks_user_user_id_5e4a77_idx'),
        ),
        migrations.AddIndex(
            model_name='userportfolio',
            index=models.Index(fields=['is_public', 'total_return_percent'], name='stocks_user_is_publ_c9a7f6_idx'),
        ),
        migrations.AddIndex(
            model_name='userportfolio',
            index=models.Index(fields=['followers_count'], name='stocks_user_followe_7e43b7_idx'),
        ),
        migrations.AddIndex(
            model_name='userinterests',
            index=models.Index(fields=['user'], name='stocks_user_user_id_5ee0fc_idx'),
        ),
        migrations.AddIndex(
            model_name='userinterests',
            index=models.Index(fields=['news_frequency'], name='stocks_user_news_fr_d5c8cb_idx'),
        ),
        migrations.AddIndex(
            model_name='tradetransaction',
            index=models.Index(fields=['portfolio', 'transaction_date'], name='stocks_trad_portfol_bf7df7_idx'),
        ),
        migrations.AddIndex(
            model_name='tradetransaction',
            index=models.Index(fields=['stock', 'transaction_date'], name='stocks_trad_stock_i_a0ac95_idx'),
        ),
        migrations.AddIndex(
            model_name='tradetransaction',
            index=models.Index(fields=['from_alert'], name='stocks_trad_from_al_3f4640_idx'),
        ),
        migrations.AddIndex(
            model_name='tradetransaction',
            index=models.Index(fields=['alert_category', 'transaction_date'], name='stocks_trad_alert_c_2defea_idx'),
        ),
        migrations.AddIndex(
            model_name='portfolioholding',
            index=models.Index(fields=['portfolio', 'stock'], name='stocks_port_portfol_a56fa1_idx'),
        ),
        migrations.AddIndex(
            model_name='portfolioholding',
            index=models.Index(fields=['from_alert'], name='stocks_port_from_al_2d3e42_idx'),
        ),
        migrations.AddIndex(
            model_name='portfolioholding',
            index=models.Index(fields=['unrealized_gain_loss_percent'], name='stocks_port_unreali_4346a7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='portfolioholding',
            unique_together={('portfolio', 'stock')},
        ),
        migrations.AddIndex(
            model_name='portfoliofollowing',
            index=models.Index(fields=['follower', 'followed_user'], name='stocks_port_followe_5a06eb_idx'),
        ),
        migrations.AddIndex(
            model_name='portfoliofollowing',
            index=models.Index(fields=['followed_user', 'followed_at'], name='stocks_port_followe_ae3df6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='portfoliofollowing',
            unique_together={('follower', 'followed_user')},
        ),
        migrations.AddIndex(
            model_name='personalizednews',
            index=models.Index(fields=['user', 'published_at'], name='stocks_pers_user_id_56e5b6_idx'),
        ),
        migrations.AddIndex(
            model_name='personalizednews',
            index=models.Index(fields=['relevance_score'], name='stocks_pers_relevan_302e1b_idx'),
        ),
        migrations.AddIndex(
            model_name='personalizednews',
            index=models.Index(fields=['category', 'published_at'], name='stocks_pers_categor_b0b8a4_idx'),
        ),
        migrations.AddIndex(
            model_name='personalizednews',
            index=models.Index(fields=['clicked', 'read_at'], name='stocks_pers_clicked_f35ab3_idx'),
        ),
    ]
