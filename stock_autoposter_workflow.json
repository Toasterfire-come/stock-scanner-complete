{
  "name": "Stock Social AutoPoster",
  "nodes": [
    {
      "id": "1",
      "name": "Cron",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        250,
        300
      ],
      "parameters": {
        "triggerTimes": [
          {
            "mode": "everyX",
            "unit": "minutes",
            "value": 20
          }
        ]
      }
    },
    {
      "id": "2",
      "name": "Get Gainers",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        500,
        300
      ],
      "parameters": {
        "url": "https://query1.finance.yahoo.com/v1/finance/screener/predefined/saved?count=10&scrIds=day_gainers",
        "responseFormat": "json"
      }
    },
    {
      "id": "3",
      "name": "Pick Top Gainer (with memory)",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        750,
        300
      ],
      "parameters": {
        "functionCode": "const data = items[0].json;\nconst gainers = data.finance.result[0].quotes;\nconst staticData = this.getWorkflowStaticData('global');\n\nfunction isUsable(ticker) {\n  const last = staticData[ticker];\n  if (!last) return true;\n  return (Date.now() - last) > 3600000; // 1 hour\n}\n\nlet chosen = null;\nfor (const g of gainers) {\n  if (isUsable(g.symbol)) {\n    chosen = g;\n    staticData[g.symbol] = Date.now();\n    break;\n  }\n}\n\nif (!chosen) return [];\n\nreturn [{\n  json: {\n    ticker: chosen.symbol,\n    percentChange: chosen.regularMarketChangePercent\n  }\n}];"
      }
    },
    {
      "id": "4",
      "name": "Get History",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1000,
        200
      ],
      "parameters": {
        "url": "https://query1.finance.yahoo.com/v8/finance/chart/{{$json[\"ticker\"]}}?range=5d&interval=15m",
        "responseFormat": "json"
      }
    },
    {
      "id": "5",
      "name": "Make Chart Config",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1250,
        200
      ],
      "parameters": {
        "functionCode": "const body = items[0].json;\nconst result = (body && body.chart && body.chart.result && body.chart.result[0]) ? body.chart.result[0] : null;\nif (!result) throw new Error(\"No chart.result found in Get History response\");\n\nconst timestamps = result.timestamp || [];\nconst closes = (result.indicators && result.indicators.quote && result.indicators.quote[0] && result.indicators.quote[0].close) || [];\n\nconst labels = timestamps.map(t => {\n  const d = new Date(t * 1000);\n  return `${d.getMonth()+1}/${d.getDate()} ${d.getHours()}:${String(d.getMinutes()).padStart(2,'0')}`;\n});\n\nconst data = closes.map((v, i) => (v === null ? null : Number(v)));\n\nconst ticker = $json[\"ticker\"];\n\nconst chartConfig = {\n  type: \"line\",\n  data: {\n    labels: labels,\n    datasets: [{\n      label: ticker,\n      data: data,\n      fill: false,\n      pointRadius: 0,\n      borderWidth: 2,\n      borderColor: \"rgba(102, 255, 102, 1)\",\n      backgroundColor: \"rgba(102,255,102,0.08)\"\n    }]\n  },\n  options: {\n    responsive: false,\n    plugins: {\n      legend: { display: false },\n      title: {\n        display: true,\n        text: `${ticker} \u2014 recent`,\n        color: \"#E6EEF8\",\n        font: { size: 18 }\n      }\n    },\n    layout: { padding: 12 },\n    scales: {\n      x: {\n        ticks: { color: \"#CFE3FF\", maxRotation: 0, autoSkip: true, maxTicksLimit: 10 },\n        grid: { color: \"#142029\" }\n      },\n      y: {\n        ticks: { color: \"#CFE3FF\" },\n        grid: { color: \"#142029\" }\n      }\n    }\n  }\n};\n\nreturn [{\n  json: {\n    chartConfig,\n    width: 1200,\n    height: 630,\n    backgroundColor: \"#0b1220\"\n  }\n}];"
      }
    },
    {
      "id": "6",
      "name": "Make Chart PNG via QuickChart",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1500,
        200
      ],
      "parameters": {
        "url": "https://quickchart.io/chart",
        "method": "POST",
        "responseFormat": "file",
        "jsonBody": {
          "chart": "={{$json.chartConfig}}",
          "width": "={{$json.width}}",
          "height": "={{$json.height}}",
          "backgroundColor": "={{$json.backgroundColor}}",
          "format": "png"
        }
      }
    },
    {
      "id": "7",
      "name": "Groq AI Post Text",
      "type": "n8n-nodes-langchain.chatModel",
      "typeVersion": 1,
      "position": [
        1000,
        400
      ],
      "parameters": {
        "model": "mixtral-8x7b",
        "temperature": 0.7,
        "sessionId": "={{$workflow.id}}-{{$json[\"ticker\"]}}",
        "messages": [
          {
            "role": "system",
            "content": "You are a financial content writer. Create a short engaging social media post about {{$json[\"ticker\"]}} which is up {{$json[\"percentChange\"]}}% today."
          }
        ]
      }
    },
    {
      "id": "8",
      "name": "Post to X",
      "type": "n8n-nodes-base.twitter",
      "typeVersion": 1,
      "position": [
        1750,
        100
      ],
      "parameters": {
        "resource": "tweet",
        "operation": "create",
        "text": "={{$json[\"content\"]}}",
        "binaryPropertyName": "data"
      }
    },
    {
      "id": "9",
      "name": "Post to LinkedIn",
      "type": "n8n-nodes-base.linkedin",
      "typeVersion": 1,
      "position": [
        1750,
        300
      ],
      "parameters": {
        "operation": "create",
        "text": "={{$json[\"content\"]}}",
        "binaryPropertyName": "data"
      }
    }
  ],
  "connections": {
    "1": {
      "main": [
        [
          {
            "node": "2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "2": {
      "main": [
        [
          {
            "node": "3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "3": {
      "main": [
        [
          {
            "node": "4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "4": {
      "main": [
        [
          {
            "node": "5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "5": {
      "main": [
        [
          {
            "node": "6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "6": {
      "main": [
        [
          {
            "node": "8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "7": {
      "main": [
        [
          {
            "node": "8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}