# NGINX reverse proxy for api.retailtradescanner.com with basic rate limits

limit_req_zone $binary_remote_addr zone=api_rate:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=api_burst:10m rate=120r/m;

server {
    listen 80;
    server_name api.retailtradescanner.com;

    # Redirect to HTTPS (terminate TLS in a separate 443 server)
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name api.retailtradescanner.com;

    # ssl_certificate and ssl_certificate_key should be configured via your ACME/Let's Encrypt
    # ssl_certificate /etc/letsencrypt/live/api.retailtradescanner.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/api.retailtradescanner.com/privkey.pem;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff;
    add_header Referrer-Policy strict-origin-when-cross-origin;
    add_header X-Frame-Options DENY;

    # Rate limiting
    limit_req zone=api_rate burst=20 nodelay;
    limit_req zone=api_burst burst=60;

    # Proxy to Django (gunicorn/uvicorn) upstream
    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 60s;
        proxy_connect_timeout 10s;
    }
}

