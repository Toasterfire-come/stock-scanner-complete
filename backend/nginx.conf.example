# NGINX example with rate limiting and proxy to Django (gunicorn/uvicorn)

worker_processes auto;

events { worker_connections 1024; }

http {
	limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
	limit_req_zone $http_authorization zone=user_token_limit:10m rate=20r/s;

	server {
		listen 80;
		server_name api.retailtradescanner.com;

		# Redirect HTTP to HTTPS if behind cert terminator, or use certs here
		# return 301 https://$host$request_uri;

		location /static/ {
			alias /var/www/app/staticfiles/;
			expires 30d;
		}

		location /media/ {
			alias /var/www/app/media/;
			expires 7d;
		}

		location / {
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_pass http://127.0.0.1:8000;

			# Rate limits: baseline per-IP
			limit_req zone=api_limit burst=30 nodelay;
			# Optional: increase for authenticated token requests
			if ($http_authorization != "") {
				limit_req zone=user_token_limit burst=60 nodelay;
			}
		}
	}
}